---
import BaseLayout from "../layouts/BaseLayout.astro";
// import { formatDate } from "../lib/formatDate";
// import { Link } from "../lib/Link";
import { Paragraph } from "../lib/prose/Paragraph";
import type { PostFrontmatter } from "../types";
import ProfilePicture from "../layouts/ProfilePicture.astro";
import profilePic from  "../../public/profile.jpg";
import {getProjects} from "../lib/project";
import Project from "../components/Project.astro"
let posts = await Astro.glob<PostFrontmatter>("../../posts/**/*.mdx");

const projects = await getProjects()
if (import.meta.env.PROD) {
  posts = posts.filter((post) => !post.frontmatter.draft);
}

posts.sort((a, b) => {
  return (
    new Date(b.frontmatter.date).getTime() -
    new Date(a.frontmatter.date).getTime()
  );
});
---

<BaseLayout
  title="andrew-rivera"
  description="andrew-rivera software-developer"
>
  <h1 slot="header-content" class="text-gray-600 dark:text-gray-500">andrew-rivera</h1>
  <main class="py-10 zaduma-prose">
    <ProfilePicture
        mobileImgUrl={profilePic}
        desktopImgUrl={profilePic}
        alt="user profile picture"
    />
    <Paragraph>
       Hi! I am a full-stack software developer based in St.Louis, MO. I currently building and maintaining enterprise
      applications in the GovTech world. Take a peek at my resume
      <a class="underline" href="./public/Andrew_Rivera_-_Full_Stack_Developer.pdf" download>Here.</a>
    </Paragraph>
    <h1 class="text-2xl">
      Skills
    </h1>
    .NET - Core - MVC
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700" style="width: 50%">
      <div class="bg-black h-2.5 rounded-full dark:bg-white h-2.5 rounded-full" style="width: 90%"></div>
    </div>
    Angular - TypeScript - JavaScript
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700" style="width: 50%">
      <div class="bg-black h-2.5 rounded-full dark:bg-white h-2.5 rounded-full" style="width: 90%"></div>
    </div>
    Entity Framework
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700"  style="width: 50%">
      <div class="bg-black h-2.5 rounded-full dark:bg-white h-2.5 rounded-full" style="width: 70%"></div>
    </div>
    SQL
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700" style="width: 50%">
      <div class="bg-black h-2.5 rounded-full dark:bg-white h-2.5 rounded-full" style="width: 50%"></div>
    </div>
    Python
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700" style="width: 50%">
      <div class="bg-black h-2.5 rounded-full dark:bg-white h-2.5 rounded-full" style="width: 50%"></div>
    </div>
    HTML - CSS
    <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700" style="width: 50%">
      <div class="bg-black h-2.5 rounded-full dark:bg-white h-2.5 rounded-full" style="width: 50%"></div>
    </div>
  </main>
  <h1 class="text-2xl">Projects</h1>
  <div class="grid grid-cols-2 gap-4 md:grid-cols-3">
    {projects.map(project => <Project {project} />)}
  </div>
  <!--<h1>blog</h1>-->
  <!-- <ul>
    {
      posts.map(({ frontmatter }) => {
        const date = new Date(frontmatter.date);

        return (
          <li>
            <Link
              href={frontmatter.path}
              class="flex flex-row gap-2 justify-between"
              noUnderline
            >
              <h2 class="text-gray-800 dark:text-gray-300 font-sans">
                {frontmatter.title}
              </h2>
              <time
                datetime={date.toISOString()}
                class="text-gray-600 dark:text-gray-400 tabular-nums tracking-tighter shrink-0"
              >
                {formatDate(date)}
              </time>
            </Link>
          </li>
        );
      })
    }
  </ul> -->
  <style>
    ul:hover li:not(:hover) :where(h2, time) {
      @apply text-gray-600 transition-colors;
      :global(.dark) & {
        @apply text-gray-500;
      }
    }
  </style>
</BaseLayout>
